{
  "name": "Applied Accessibility",
  "order": 3,
  "time": "5 hours",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "587d774c367417b2b2512a9c",
      "title": "Add a Text Alternative to Images for Visually Impaired Accessibility",
      "description": [
        "在其他挑战里你应该已经使用过 <code>img</code> 标签的 <code>alt</code> 属性了。<code>Alt</code> 属性中的文本作为备选文字描述了图片的内容，这有助于用户在图片加载失败或者不可见的情况下理解图片内容，也有助于搜索引擎理解图片内容，并将其加入到搜索结果中。例如：",
        "<code>&lt;img src=&quot;importantLogo.jpeg&quot; alt=&quot;Company logo&quot;&gt;</code>",
        "那些无法通过视觉获取信息的用户，只能通过屏幕阅读器将网页内容转换为音频的方式获取信息，而屏幕阅读器是通过识别并朗读图片 <code>alt</code> 属性中的内容，来传递图片包含的关键信息。",
        "良好的 <code>alt</code> 文本可以简明扼要地描述图片信息，所以你的图片最好总是包含一个<code>alt</code>属性。HTML5 文档正在考虑强制要求这点。",
        "<hr>",
        "碰巧，无论是 Camper 新手还是 Camper 老鸟，正在建立一个可以分享其知识的网站。他要使用一张对所有网站访问者都能有效识别的个人资料图片来展示他的技巧。给 <code>img</code> 标签上添加一个 <code>alt</code> 属性，就是Camper Cat的绝招。（图片的 <code>src</code> 并不指向任何文件，你应该能在显示器上看到 <code>alt</code> 文本。）"
      ],
      "tests": [
        {
          "text": "你的 <code>img</code> 应该有一个包含说明性文字的 <code>alt</code> 属性。",
          "testString": "assert($('img').attr('alt'), 'Your <code>img</code> tag should have an <code>alt</code> attribute, and it should not be empty.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "guideUrl": "https://guide.freecodecamp.org/certificates/add-alt-text-to-an-image-for-accessibility",
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<img src=\"doingKarateWow.jpeg\">"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d774c367417b2b2512a9d",
      "title": "Know When Alt Text Should be Left Blank",
      "description": [
        "在上一个挑战中，我们了解到在 <code>img</code> 标签里必须要包含一个 <code>alt</code> 属性。但是有时候，图片已经有了文字说明，或者仅仅为了美化页面。在这些情况下，<code>alt</code> 属性似乎有些多余。",
        "但是即使图片已经有文字说明或者对页面来说没有意义，我们仍然需要为 <code>img</code> 标签添加 <code>alt</code> 属性，这种情况下，可以把它设为空，例如：",
        "<code>&lt;img src=&quot;visualDecoration.jpeg&quot; alt=&quot;&quot;&gt;</code>",
        "对于背景图片，它们通常起装饰作用，而且含有CSS类，所以，背景图片不会被屏幕阅读器处理。",
        "<strong>Note</strong><br>对于有说明文字的图片，我们依然需要添加 <code>alt</code> 属性，因为这样有助于搜索引擎记录图片内容。",
        "<hr>",
        "Camper Cat已经为他的网站中的博客页面编码好了框架。他打算使用武士刀图片作为两篇文章之间的分割线。为 <code>img</code> 标签添加一个空的 <code>alt</code> 属性。（<code>img</code>标签的 <code>src</code> 不需要连接到真实的图片 - 显示器不会显示任何刀剑。）"
      ],
      "tests": [
        {
          "text": "你的 <code>img</code> 标签需要包含一个 <code>alt</code> 属性",
          "testString": "assert(!($('img').attr('alt') == undefined), 'Your <code>img</code> tag should have an <code>alt</code> attribute.');"
        },
        {
          "text": "<code>alt</code> 属性的值应该为空字符串。",
          "testString": "assert($('img').attr('alt') == '', 'The <code>alt</code> attribute should be set to an empty string.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<h1>Deep Thoughts with Master Camper Cat</h1>",
            "<article>",
            "  <h2>Defeating your Foe: the Red Dot is Ours!</h2>",
            "  <p>To Come...</p>",
            "</article>",
            "",
            "<img src=\"samuraiSwords.jpeg\">",
            "",
            "<article>",
            "  <h2>Is Chuck Norris a Cat Person?</h2>",
            "  <p>To Come...</p>",
            "</article>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d774d367417b2b2512a9e",
      "title": "Use Headings to Show Hierarchical Relationships of Content",
      "description": [
        "标题标签（包含从<code>h1</code> 到 <code>h6</code> 的六个不同级别的标签）有很高的使用率，它们有助于为你的内容安排结构并标记内容。屏幕阅读器可以设置为只朗读页面的标题，以使用户获得页面的主题。这意味着一个重要的事实：要使你的标志具有语义化并相互关联，而不要仅仅为了利用它们之间不同的字体大小。",
        "<em>语义化</em>是说为你的内容所用的标签，能表示出它所含内容的信息类型。",
        "如果你正在写一篇含有引言、正文、结论的论文，在你的概述中，把结论作为正文的一小节是没有意义的。结论应该作为一个单独部分。类似的，页面中的标题标签应该是有序的，并且能指明内容的层次关系。",
        "同级别（或者更高级别）的标题应该作为一个新的章节，而低级别的标题作为上一级标题的小节部分。",
        "例如：一个 <code>h2</code> 标签后紧跟若干用 <code>h4</code> 标签标记的小节的页面，会使屏幕阅读器用户感到疑惑。使用6个标题标签来控制字体的大小是很吸引人的，因为在浏览器中，它们看起来更好，但是你也可以使用CSS来控制字体的相对大小。",
        "最后一点，每个页面只能有一个 <code>h1</code> 标签，用来说明页面主要内容。这个标签和其他的标题标签一起用于辅助搜索引擎理解页面的主题。",
        "<hr>",
        "Camper Cat希望他的网站有个页面，指明如何成为忍者。帮助他修改标题标签，使它们对标题具有语义，并且父子关系正确。将所有的 <code>h5</code> 标题标签修改为恰当的级别，以表示它们是 <code>h2</code> 标题标签的子级。"
      ],
      "tests": [
        {
          "text": "你的代码需要包含6个 <code>h3</code> 标签。",
          "testString": "assert($('h3').length === 6, '你的代码需要包含6个 <code>h3</code> 标签。"
        },
        {
          "text": "你的代码不能包含 <code>h5</code> 标签。",
          "testString": "assert($('h5').length === 0, '你的代码需要包含6个 <code>h3</code> 标签。"
        }
      ],
      "solutions": [],
      "hints": [
        "All the h5 tags are siblings, and should be changed to the same new heading level."
      ],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<h1>How to Become a Ninja</h1>",
            "<main>",
            "  <h2>Learn the Art of Moving Stealthily</h2>",
            "  <h5>How to Hide in Plain Sight</h5>",
            "  <h5>How to Climb a Wall</h5>",
            "",
            "  <h2>Learn the Art of Battle</h2>",
            "  <h5>How to Strengthen your Body</h5>",
            "  <h5>How to Fight like a Ninja</h5>",
            "",
            "  <h2>Learn the Art of Living with Honor</h2>",
            "  <h5>How to Breathe Properly</h5>",
            "  <h5>How to Simplify your Life</h5>",
            "</main>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d774e367417b2b2512a9f",
      "title": "Jump Straight to the Content Using the main Element",
      "description": [
        "HTML5引入了很多新标签，它们为开发人员提供了更多选择与辅助特性。这些新标签包括 <code>main</code>, <code>header</code>, <code>footer</code>, <code>nav</code>, <code>article</code>, and <code>section</code>等。",
        "默认情况下，浏览器呈现这些新标签的方式与 <code>div</code> 类似。但是，在适当的地方使用它们，可以为你的标志提供额外的信息。仅标签的名字就能指示其所包含内容的信息类型，这也使内容具有语义化含义。辅助技术可以访问这些信息，以便为其用户提供更好的页面概要或导航选项。",
        "<code> main </code> 标签用于修饰（你猜对了）主题，且每个页面应该只有一个。它旨在包含与页面中心主题相关的信息。这并不意味着包含那些跨页面重复出现的项目，如导航连接、网页横幅。",
        "<code>main</code> 标签也具有锚点功能，使辅助技术可以快速定位到主题。如果你曾在页面顶部见到过“跳转到主题”连接的话，使用 <code>main</code> 标签就能使辅助设备自动具备这个功能。",
        "<hr>",
        "Camper Cat对他的忍者武器页面有一些重要想法。通过在 <code>header</code> 标签和 <code>footer</code> 标签（在其他挑战中会涉及）之间添加起始和闭合 <code>main</code> 标签来帮助他建立标志。现在保持 <code>main</code> 为空。"
      ],
      "tests": [
        {
          "text": "你的代码应该有一个 <code>main</code> 标记。",
          "testString": "assert($('main').length == 1, '你的代码应该有一个 <code>main</code> 标记。');"
        },
        {
          "text": "<code>main</code>标签应该在闭合的 <code>header</code> 标签与起始的 <code>footer</code> 标签之间。",
          "testString": "assert(code.match(/<\\/header>\\s*?<main>\\s*?<\\/main>/gi), '<code>main</code>标签应该在闭合的 <code>header</code> 标签与起始的 <code>footer</code> 标签之间。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<header>",
            "  <h1>Weapons of the Ninja</h1>",
            "</header>",
            "",
            "",
            "",
            "<footer></footer>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d774e367417b2b2512aa0",
      "title": "Wrap Content in the article Element",
      "description": [
        "<code>article</code>是另一个可以使你的标记语义化的新HTML5标签。<code>Article</code>是一个分段标签，用于修饰独立的、自包含的内容。这个标签适用于博客入口，论坛帖子或者新闻文章。",
        "这里有些技巧可以用来判断内容是否独立。问自己如果删除了上下文，该内容是否仍然有意义？相似地，对于文本，如果它在RSS提要中，它的意义是否保留。",
        "请牢记，使用辅助技术的用户依赖于组织良好的、语义化的标志，来更好的理解你的页面。",
        "<strong>注意<code>section</code>与<code>div</code></strong><br><code>section</code>也是一个新的HTML5标签，与<code>article</code>标签的语义含义略有不同。<code>article</code>用于独立的内容，而<code>section</code>用于对与主题相关的内容进行分组。它们可以根据需要批次之间互相包含着使用。如果一本书是一个<code>article</code>的话，那么每个章节就是<code>section</code>。如果内容组之间没有联系，请使用<code>div</code>。",
        "<blockquote>&lt;div&gt; - 内容组<br>&lt;section&gt; - 有联系的内容组<br>&lt;article&gt; - 独立的、自包含的内容<br></blockquote>",
        "<hr>",
        "Camper Cat使用<code>article</code>标签来修饰他的博客页面里的帖子，但是他忘记在顶部的帖子上使用它。使用<code>article</code>标签来代替<code>div</code>标签。"
      ],
      "tests": [
        {
          "text": "你的代码中应该有三个 <code>article</code> 标签。",
          "testString": "assert($('article').length == 3, '你的代码中应该有三个 <code>article</code> 标签。');"
        },
        {
          "text": "你的代码不能含有 <code>div</code> 标签。",
          "testString": "assert($('div').length == 0, '你的代码不能含有 <code>div</code> 标签。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<h1>Deep Thoughts with Master Camper Cat</h1>",
            "<main>",
            "  <div>",
            "    <h2>The Garfield Files: Lasagna as Training Fuel?</h2>",
            "    <p>The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses. But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna...</p>",
            "  </div>",
            "",
            "  <img src=\"samuraiSwords.jpeg\" alt=\"\">",
            "",
            "  <article>",
            "    <h2>Defeating your Foe: the Red Dot is Ours!</h2>",
            "    <p>Felines the world over have been waging war on the most persistent of foes. This red nemesis combines both cunning stealth and lightening speed. But chin up, fellow fighters, our time for victory may soon be near...</p>",
            "  </article>",
            "",
            "  <img src=\"samuraiSwords.jpeg\" alt=\"\">",
            "",
            "  <article>",
            "    <h2>Is Chuck Norris a Cat Person?</h2>",
            "    <p>Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence anyone who disagrees with this fact mysteriously disappears soon after. But the real question is, is he a cat person?...</p>",
            "  </article>",
            "</main>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7787367417b2b2512aa1",
      "title": "Make Screen Reader Navigation Easier with the header Landmark",
      "description": [
        "下一个可以增加语义化与可访问性的HTML5标签是<code>header</code>。它用于为它的父级标签包装简介信息或者导航链接，也适用于在多个页面顶端重复出现的内容。",
        "<code>header</code> shares the embedded landmark feature you saw with <code>main</code>, 可以使辅助技术快速导航到它的内容。",
        "<strong>注意</strong><br><code>header</code>用于HTML文档的<code>body</code>标签中。这点不同于包含页面标题、元信息的<code>head</code>标签。",
        "<hr>",
        "Camper Cat正在写一些关于忍者训练的精彩文章，他想在他的站点中为这些文章建立一个页面。使用<code>header</code>替代位于页面顶端的包含<code>h1</code>的<code>div</code>标签。"
      ],
      "tests": [
        {
          "text": "你的代码因该包含一个<code>header</code>标签。",
          "testString": "assert($('header').length == 1, '你的代码因该包含一个<code>header</code>标签。');"
        },
        {
          "text": "你的<code>header</code>标签应该包含<code>h1</code>。",
          "testString": "assert($('header').children('h1').length == 1, '你的<code>header</code>标签应该包含<code>h1</code>。');"
        },
        {
          "text": "你的代码不能包含任何<code>div</code>标签。",
          "testString": "assert($('div').length == 0, '你的代码不能包含任何<code>div</code>标签。');"
        },
        {
          "text": "确保你的<code>header</code>标签是闭合的。",
          "testString": "assert(code.match(/<\\/header>/g) && code.match(/<\\/header>/g).length === code.match(/<header>/g).length, '确保你的<code>header</code>标签是闭合的。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "",
            "  <div>",
            "    <h1>Training with Camper Cat</h1>",
            "  </div>",
            "",
            "",
            "  <main>",
            "    <section id=\"stealth\">",
            "      <h2>Stealth &amp; Agility Training</h2>",
            "      <article><h3>Climb foliage quickly using a minimum spanning tree approach</h3></article>",
            "      <article><h3>No training is NP-complete without parkour</h3></article>",
            "    </section>",
            "    <section id=\"combat\">",
            "      <h2>Combat Training</h2>",
            "      <article><h3>Dispatch multiple enemies with multithreaded tactics</h3></article>",
            "      <article><h3>Goodbye world: 5 proven ways to knock out an opponent</h3></article>",
            "    </section>",
            "    <section id=\"weapons\">",
            "      <h2>Weapons Training</h2>",
            "      <article><h3>Swords: the best tool to literally divide and conquer</h3></article>",
            "      <article><h3>Breadth-first or depth-first in multi-weapon training?</h3></article>",
            "    </section>",
            "  </main>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7788367417b2b2512aa2",
      "title": "Make Screen Reader Navigation Easier with the nav Landmark",
      "description": [
        "The <code>nav</code> element is another HTML5 item with the embedded landmark feature for easy screen reader navigation. This tag is meant to wrap around the main navigation links in your page.",
        "If there are repeated site links at the bottom of the page, it isn't necessary to markup those with a <code>nav</code> tag as well. Using a <code>footer</code> (covered in the next challenge) is sufficient.",
        "<hr>",
        "Camper Cat included navigation links at the top of his training page, but wrapped them in a <code>div</code>. Change the <code>div</code> to a <code>nav</code> tag to improve the accessibility on his page."
      ],
      "tests": [
        {
          "text": "Your code should have one <code>nav</code> tag.",
          "testString": "assert($('nav').length == 1, 'Your code should have one <code>nav</code> tag.');"
        },
        {
          "text": "Your <code>nav</code> tags should wrap around the <code>ul</code> and its list items.",
          "testString": "assert($('nav').children('ul').length == 1, 'Your <code>nav</code> tags should wrap around the <code>ul</code> and its list items.');"
        },
        {
          "text": "Your code should not have any <code>div</code> tags.",
          "testString": "assert($('div').length == 0, 'Your code should not have any <code>div</code> tags.');"
        },
        {
          "text": "Make sure your <code>nav</code> element has a closing tag.",
          "testString": "assert(code.match(/<\\/nav>/g) && code.match(/<\\/nav>/g).length === code.match(/<nav>/g).length, 'Make sure your <code>nav</code> element has a closing tag.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "  <header>",
            "    <h1>Training with Camper Cat</h1>",
            "",
            "    <div>",
            "      <ul>",
            "        <li><a href=\"#stealth\">Stealth &amp; Agility</a></li>",
            "        <li><a href=\"#combat\">Combat</a></li>",
            "        <li><a href=\"#weapons\">Weapons</a></li>",
            "      </ul>",
            "    </div>",
            "",
            "  </header>",
            "  <main>",
            "    <section id=\"stealth\">",
            "      <h2>Stealth &amp; Agility Training</h2>",
            "      <article><h3>Climb foliage quickly using a minimum spanning tree approach</h3></article>",
            "      <article><h3>No training is NP-complete without parkour</h3></article>",
            "    </section>",
            "    <section id=\"combat\">",
            "      <h2>Combat Training</h2>",
            "      <article><h3>Dispatch multiple enemies with multithreaded tactics</h3></article>",
            "      <article><h3>Goodbye world: 5 proven ways to knock out an opponent</h3></article>",
            "    </section>",
            "    <section id=\"weapons\">",
            "      <h2>Weapons Training</h2>",
            "      <article><h3>Swords: the best tool to literally divide and conquer</h3></article>",
            "      <article><h3>Breadth-first or depth-first in multi-weapon training?</h3></article>",
            "    </section>",
            "  </main>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7788367417b2b2512aa3",
      "title": "Make Screen Reader Navigation Easier with the footer Landmark",
      "description": [
        "Similar to <code>header</code> and <code>nav</code>, the <code>footer</code> element has a built-in landmark feature that allows assistive devices to quickly navigate to it. It's primarily used to contain copyright information or links to related documents that usually sit at the bottom of a page.",
        "<hr>",
        "Camper Cat's training page is making good progress. Change the <code>div</code> he used to wrap his copyright information at the bottom of the page to a <code>footer</code> element."
      ],
      "tests": [
        {
          "text": "Your code should have one <code>footer</code> tag.",
          "testString": "assert($('footer').length == 1, 'Your code should have one <code>footer</code> tag.');"
        },
        {
          "text": "Your code should not have any <code>div</code> tags.",
          "testString": "assert($('div').length == 0, 'Your code should not have any <code>div</code> tags.');"
        },
        {
          "text": "Your code should have an opening and closing <code>footer</code> tag.",
          "testString": "assert(code.match(/<footer>\\s*&copy; 2016 Camper Cat\\s*<\\/footer>/g), 'Your code should have an opening and closing <code>footer</code> tag.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "  <header>",
            "    <h1>Training</h1>",
            "    <nav>",
            "      <ul>",
            "        <li><a href=\"#stealth\">Stealth &amp; Agility</a></li>",
            "        <li><a href=\"#combat\">Combat</a></li>",
            "        <li><a href=\"#weapons\">Weapons</a></li>",
            "      </ul>",
            "    </nav>",
            "  </header>",
            "  <main>",
            "    <section id=\"stealth\">",
            "      <h2>Stealth &amp; Agility Training</h2>",
            "      <article><h3>Climb foliage quickly using a minimum spanning tree approach</h3></article>",
            "      <article><h3>No training is NP-complete without parkour</h3></article>",
            "    </section>",
            "    <section id=\"combat\">",
            "      <h2>Combat Training</h2>",
            "      <article><h3>Dispatch multiple enemies with multithreaded tactics</h3></article>",
            "      <article><h3>Goodbye world: 5 proven ways to knock out an opponent</h3></article>",
            "    </section>",
            "    <section id=\"weapons\">",
            "      <h2>Weapons Training</h2>",
            "      <article><h3>Swords: the best tool to literally divide and conquer</h3></article>",
            "      <article><h3>Breadth-first or depth-first in multi-weapon training?</h3></article>",
            "    </section>",
            "  </main>",
            "",
            "",
            "  <div>&copy; 2016 Camper Cat</div>",
            "",
            "",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7789367417b2b2512aa4",
      "title": "Improve Accessibility of Audio Content with the audio Element",
      "description": [
        "HTML5's <code>audio</code> element gives semantic meaning when it wraps sound or audio stream content in your markup. Audio content also needs a text alternative to be accessible to people who are deaf or hard of hearing. This can be done with nearby text on the page or a link to a transcript.",
        "The <code>audio</code> tag supports the <code>controls</code> attribute. This shows the browser default play, pause, and other controls, and supports keyboard functionality. This is a boolean attribute, meaning it doesn't need a value, its presence on the tag turns the setting on.",
        "Here's an example:",
        "<blockquote>&lt;audio id=&quot;meowClip&quot; controls&gt;<br>&nbsp;&nbsp;&lt;source src=&quot;audio/meow.mp3&quot; type=&quot;audio/mpeg&quot; /&gt;<br>&nbsp;&nbsp;&lt;source src=&quot;audio/meow.ogg&quot; type=&quot;audio/ogg&quot; /&gt;<br>&lt;/audio&gt;<br></blockquote>",
        "<strong>Note</strong><br>Multimedia content usually has both visual and auditory components. It needs synchronized captions and a transcript so users with visual and/or auditory impairments can access it. Generally, a web developer is not responsible for creating the captions or transcript, but needs to know to include them.",
        "<hr>",
        "Time to take a break from Camper Cat and meet fellow camper Zersiax (@zersiax), a champion of accessibility and a screen reader user. To hear a clip of his screen reader in action, add an <code>audio</code> element after the <code>p</code>. Include the <code>controls</code> attribute. Then place a <code>source</code> tag inside the <code>audio</code> tags with the <code>src</code> attribute set to \"https://s3.amazonaws.com/freecodecamp/screen-reader.mp3\" and <code>type</code> attribute set to \"audio/mpeg\".",
        "<strong>Note</strong><br>The audio clip may sound fast and be difficult to understand, but that is a normal speed for screen reader users."
      ],
      "tests": [
        {
          "text": "Your code should have one <code>audio</code> tag.",
          "testString": "assert($('audio').length === 1, 'Your code should have one <code>audio</code> tag.');"
        },
        {
          "text": "Make sure your <code>audio</code> element has a closing tag.",
          "testString": "assert(code.match(/<\\/audio>/g).length === 1 && code.match(/<audio.*>[\\s\\S]*<\\/audio>/g), 'Make sure your <code>audio</code> element has a closing tag.');"
        },
        {
          "text": "The <code>audio</code> tag should have the <code>controls</code> attribute.",
          "testString": "assert($('audio').attr('controls'), 'The <code>audio</code> tag should have the <code>controls</code> attribute.');"
        },
        {
          "text": "Your code should have one <code>source</code> tag.",
          "testString": "assert($('source').length === 1, 'Your code should have one <code>source</code> tag.');"
        },
        {
          "text": "Your <code>source</code> tag should be inside the <code>audio</code> tags.",
          "testString": "assert($('audio').children('source').length === 1, 'Your <code>source</code> tag should be inside the <code>audio</code> tags.');"
        },
        {
          "text": "The value for the <code>src</code> attribute on the <code>source</code> tag should match the link in the instructions exactly.",
          "testString": "assert($('source').attr('src') === 'https://s3.amazonaws.com/freecodecamp/screen-reader.mp3', 'The value for the <code>src</code> attribute on the <code>source</code> tag should match the link in the instructions exactly.');"
        },
        {
          "text": "Your code should include a <code>type</code> attribute on the <code>source</code> tag with a value of audio/mpeg.",
          "testString": "assert($('source').attr('type') === 'audio/mpeg', 'Your code should include a <code>type</code> attribute on the <code>source</code> tag with a value of audio/mpeg.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "  <header>",
            "    <h1>Real Coding Ninjas</h1>",
            "  </header>",
            "  <main>",
            "    <p>A sound clip of Zersiax's screen reader in action.</p>",
            "    ",
            "    ",
            "    ",
            "  </main>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d778a367417b2b2512aa5",
      "title": "Improve Chart Accessibility with the figure Element",
      "description": [
        "HTML5 introduced the <code>figure</code> element, along with the related <code>figcaption</code>. Used together, these items wrap a visual representation (like an image, diagram, or chart) along with its caption. This gives a two-fold accessibility boost by both semantically grouping related content, and providing a text alternative that explains the <code>figure</code>.",
        "For data visualizations like charts, the caption can be used to briefly note the trends or conclusions for users with visual impairments. Another challenge covers how to move a table version of the chart's data off-screen (using CSS) for screen reader users.",
        "Here's an example - note that the <code>figcaption</code> goes inside the <code>figure</code> tags and can be combined with other elements:",
        "<blockquote>&lt;figure&gt;<br>&nbsp;&nbsp;&lt;img src=&quot;roundhouseDestruction.jpeg&quot; alt=&quot;Photo of Camper Cat executing a roundhouse kick&quot;&gt;<br>&nbsp;&nbsp;&lt;br&gt;<br>&nbsp;&nbsp;&lt;figcaption&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;Master Camper Cat demonstrates proper form of a roundhouse kick.<br>&nbsp;&nbsp;&lt;/figcaption&gt;<br>&lt;/figure&gt;<br></blockquote>",
        "<hr>",
        "Camper Cat is hard at work creating a stacked bar chart showing the amount of time per week to spend training in stealth, combat, and weapons. Help him structure his page better by changing the <code>div</code> tag he used to a <code>figure</code> tag, and the <code>p</code> tag that surrounds the caption to a <code>figcaption</code> tag."
      ],
      "tests": [
        {
          "text": "Your code should have one <code>figure</code> tag.",
          "testString": "assert($('figure').length == 1, 'Your code should have one <code>figure</code> tag.');"
        },
        {
          "text": "Your code should have one <code>figcaption</code> tag.",
          "testString": "assert($('figcaption').length == 1, 'Your code should have one <code>figcaption</code> tag.');"
        },
        {
          "text": "Your code should not have any <code>div</code> tags.",
          "testString": "assert($('div').length == 0, 'Your code should not have any <code>div</code> tags.');"
        },
        {
          "text": "Your code should not have any <code>p</code> tags.",
          "testString": "assert($('p').length == 0, 'Your code should not have any <code>p</code> tags.');"
        },
        {
          "text": "The <code>figcaption</code> should be a child of the <code>figure</code> tag.",
          "testString": "assert($('figure').children('figcaption').length == 1, 'The <code>figcaption</code> should be a child of the <code>figure</code> tag.');"
        },
        {
          "text": "Make sure your <code>figure</code> element has a closing tag.",
          "testString": "assert(code.match(/<\\/figure>/g) && code.match(/<\\/figure>/g).length === code.match(/<figure>/g).length, 'Make sure your <code>figure</code> element has a closing tag.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "  <header>",
            "    <h1>Training</h1>",
            "    <nav>",
            "      <ul>",
            "        <li><a href=\"#stealth\">Stealth &amp; Agility</a></li>",
            "        <li><a href=\"#combat\">Combat</a></li>",
            "        <li><a href=\"#weapons\">Weapons</a></li>",
            "      </ul>",
            "    </nav>",
            "  </header>",
            "  <main>",
            "    <section>",
            "      ",
            "      <!-- Add your code below this line -->",
            "      <div>",
            "        <!-- Stacked bar chart will go here -->",
            "        <br>",
            "        <p>Breakdown per week of time to spend training in stealth, combat, and weapons.</p>",
            "      </div>",
            "      <!-- Add your code above this line -->",
            "      ",
            "    </section>",
            "    <section id=\"stealth\">",
            "      <h2>Stealth &amp; Agility Training</h2>",
            "      <article><h3>Climb foliage quickly using a minimum spanning tree approach</h3></article>",
            "      <article><h3>No training is NP-complete without parkour</h3></article>",
            "    </section>",
            "    <section id=\"combat\">",
            "      <h2>Combat Training</h2>",
            "      <article><h3>Dispatch multiple enemies with multithreaded tactics</h3></article>",
            "      <article><h3>Goodbye world: 5 proven ways to knock out an opponent</h3></article>",
            "    </section>",
            "    <section id=\"weapons\">",
            "      <h2>Weapons Training</h2>",
            "      <article><h3>Swords: the best tool to literally divide and conquer</h3></article>",
            "      <article><h3>Breadth-first or depth-first in multi-weapon training?</h3></article>",
            "    </section>",
            "  </main>",
            "  <footer>&copy; 2016 Camper Cat</footer>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d778a367417b2b2512aa6",
      "title": "Improve Form Field Accessibility with the label Element",
      "description": [
        "Improving accessibility with semantic HTML markup applies to using both appropriate tag names as well as attributes. The next several challenges cover some important scenarios using attributes in forms.",
        "The <code>label</code> tag wraps the text for a specific form control item, usually the name or label for a choice. This ties meaning to the item and makes the form more readable. The <code>for</code> attribute on a <code>label</code> tag explicitly associates that <code>label</code> with the form control and is used by screen readers.",
        "You learned about radio buttons and their labels in a lesson in the Basic HTML section. In that lesson, we wrapped the radio button input element inside a <code>label</code> element along with the label text in order to make the text clickable. Another way to achieve this is by using the <code>for</code> attribute as explained in this lesson.",
        "The value of the <code>for</code> attribute must be the same as the value of the <code>id</code> attribute of the form control. Here's an example:",
        "<blockquote>&lt;form&gt;<br>&nbsp;&nbsp;&lt;label for=&quot;name&quot;&gt;Name:&lt;/label&gt;<br>&nbsp;&nbsp;&lt;input type=&quottext&quot; id=&quot;name&quot; name=&quot;name&quot;&gt;<br>&lt;/form&gt;<br></blockquote>",
        "<hr>",
        "Camper Cat expects a lot of interest in his thoughtful blog posts, and wants to include an email sign up form. Add a <code>for</code> attribute on the email <code>label</code> that matches the <code>id</code> on its <code>input</code> field."
      ],
      "tests": [
        {
          "text": "Your code should have a <code>for</code> attribute on the <code>label</code> tag that is not empty.",
          "testString": "assert($('label').attr('for'), 'Your code should have a <code>for</code> attribute on the <code>label</code> tag that is not empty.');"
        },
        {
          "text": "Your <code>for</code> attribute value should match the <code>id</code> value on the email <code>input</code>.",
          "testString": "assert($('label').attr('for') == 'email', 'Your <code>for</code> attribute value should match the <code>id</code> value on the email <code>input</code>.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "  <header>",
            "    <h1>Deep Thoughts with Master Camper Cat</h1>",
            "  </header>",
            "  <section>",
            "    <form>",
            "      <p>Sign up to receive Camper Cat's blog posts by email here!</p>",
            "      ",
            "      ",
            "      <label>Email:</label>",
            "      <input type=\"text\" id=\"email\" name=\"email\">",
            "      ",
            "      ",
            "      <input type=\"submit\" name=\"submit\" value=\"Submit\">",
            "    </form>",
            "  </section>",
            "  <article>",
            "    <h2>The Garfield Files: Lasagna as Training Fuel?</h2>",
            "    <p>The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses. But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna...</p>",
            "  </article>",
            "  <img src=\"samuraiSwords.jpeg\" alt=\"\">",
            "  <article>",
            "    <h2>Defeating your Foe: the Red Dot is Ours!</h2>",
            "    <p>Felines the world over have been waging war on the most persistent of foes. This red nemesis combines both cunning stealth and lightening speed. But chin up, fellow fighters, our time for victory may soon be near...</p>",
            "  </article>",
            "  <img src=\"samuraiSwords.jpeg\" alt=\"\">",
            "  <article>",
            "    <h2>Is Chuck Norris a Cat Person?</h2>",
            "    <p>Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence anyone who disagrees with this fact mysteriously disappears soon after. But the real question is, is he a cat person?...</p>",
            "  </article>",
            "  <footer>&copy; 2016 Camper Cat</footer>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d778b367417b2b2512aa7",
      "title": "Wrap Radio Buttons in a fieldset Element for Better Accessibility",
      "description": [
        "The next form topic covers accessibility of radio buttons. Each choice is given a <code>label</code> with a <code>for</code> attribute tying to the <code>id</code> of the corresponding item as covered in the last challenge. Since radio buttons often come in a group where the user must choose one, there's a way to semantically show the choices are part of a set.",
        "The <code>fieldset</code> tag surrounds the entire grouping of radio buttons to achieve this. It often uses a <code>legend</code> tag to provide a description for the grouping, which is read by screen readers for each choice in the <code>fieldset</code> element.",
        "The <code>fieldset</code> wrapper and <code>legend</code> tag are not necessary when the choices are self-explanatory, like a gender selection. Using a <code>label</code> with the <code>for</code> attribute for each radio button is sufficient.",
        "Here's an example:",
        "<blockquote>&lt;form&gt;<br>&nbsp;&nbsp;&lt;fieldset&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;legend&gt;Choose one of these three items:&lt;/legend&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;input id=&quot;one&quot; type=&quot;radio&quot; name=&quot;items&quot; value=&quot;one&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;label for=&quot;one&quot;&gt;Choice One&lt;/label&gt;&lt;br&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;input id=&quot;two&quot; type=&quot;radio&quot; name=&quot;items&quot; value=&quot;two&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;label for=&quot;two&quot;&gt;Choice Two&lt;/label&gt;&lt;br&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;input id=&quot;three&quot; type=&quot;radio&quot; name=&quot;items&quot; value=&quot;three&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;label for=&quot;three&quot;&gt;Choice Three&lt;/label&gt;<br>&nbsp;&nbsp;&lt;/fieldset&gt;<br>&lt;/form&gt;<br></blockquote>",
        "<hr>",
        "Camper Cat wants information about the ninja level of his users when they sign up for his email list. He's added a set of radio buttons, and learned from our last lesson to use label tags with <code>for</code> attributes for each choice. Go Camper Cat! However, his code still needs some help. Change the div tag surrounding the radio buttons to a fieldset tag, and change the p tag inside it to a legend."
      ],
      "tests": [
        {
          "text": "Your code should have a <code>fieldset</code> tag around the radio button set.",
          "testString": "assert($('fieldset').length == 1, 'Your code should have a <code>fieldset</code> tag around the radio button set.');"
        },
        {
          "text": "Make sure your <code>fieldset</code> element has a closing tag.",
          "testString": "assert(code.match(/<\\/fieldset>/g) && code.match(/<\\/fieldset>/g).length === code.match(/<fieldset>/g).length, 'Make sure your <code>fieldset</code> element has a closing tag.');"
        },
        {
          "text": "Your code should have a <code>legend</code> tag around the text asking what level ninja a user is.",
          "testString": "assert($('legend').length == 1, 'Your code should have a <code>legend</code> tag around the text asking what level ninja a user is.');"
        },
        {
          "text": "Your code should not have any <code>div</code> tags.",
          "testString": "assert($('div').length == 0, 'Your code should not have any <code>div</code> tags.');"
        },
        {
          "text": "Your code should no longer have a <code>p</code> tag around the text asking what level ninja a user is.",
          "testString": "assert($('p').length == 4, 'Your code should no longer have a <code>p</code> tag around the text asking what level ninja a user is.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "  <header>",
            "    <h1>Deep Thoughts with Master Camper Cat</h1>",
            "  </header>",
            "  <section>",
            "    <form>",
            "      <p>Sign up to receive Camper Cat's blog posts by email here!</p>",
            "      <label for=\"email\">Email:</label>",
            "      <input type=\"text\" id=\"email\" name=\"email\">",
            "      ",
            "      ",
            "      <!-- Add your code below this line -->",
            "      <div>",
            "        <p>What level ninja are you?</p>",
            "        <input id=\"newbie\" type=\"radio\" name=\"levels\" value=\"newbie\">",
            "        <label for=\"newbie\">Newbie Kitten</label><br>",
            "        <input id=\"intermediate\" type=\"radio\" name=\"levels\" value=\"intermediate\">",
            "        <label for=\"intermediate\">Developing Student</label><br>",
            "        <input id=\"master\" type=\"radio\" name=\"levels\" value=\"master\">",
            "        <label for=\"master\">Master</label>",
            "      </div>",
            "      <!-- Add your code above this line -->",
            "      ",
            "      ",
            "      <input type=\"submit\" name=\"submit\" value=\"Submit\">",
            "    </form>",
            "  </section>",
            "  <article>",
            "    <h2>The Garfield Files: Lasagna as Training Fuel?</h2>",
            "    <p>The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses. But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna...</p>",
            "  </article>",
            "  <img src=\"samuraiSwords.jpeg\" alt=\"\">",
            "  <article>",
            "    <h2>Defeating your Foe: the Red Dot is Ours!</h2>",
            "    <p>Felines the world over have been waging war on the most persistent of foes. This red nemesis combines both cunning stealth and lightening speed. But chin up, fellow fighters, our time for victory may soon be near...</p>",
            "  </article>",
            "  <img src=\"samuraiSwords.jpeg\" alt=\"\">",
            "  <article>",
            "    <h2>Is Chuck Norris a Cat Person?</h2>",
            "    <p>Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence anyone who disagrees with this fact mysteriously disappears soon after. But the real question is, is he a cat person?...</p>",
            "  </article>",
            "  <footer>&copy; 2016 Camper Cat</footer>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d778b367417b2b2512aa8",
      "title": "Add an Accessible Date Picker",
      "description": [
        "Forms often include the <code>input</code> field, which can be used to create several different form controls. The <code>type</code> attribute on this element indicates what kind of input will be created.",
        "You may have noticed the <code>text</code> and <code>submit</code> input types in prior challenges, and HTML5 introduced an option to specify a <code>date</code> field. Depending on browser support, a date picker shows up in the <code>input</code> field when it's in focus, which makes filling in a form easier for all users.",
        "For older browsers, the type will default to <code>text</code>, so it helps to show users the expected date format in the label or as placeholder text just in case.",
        "Here's an example:",
        "<blockquote>&lt;label for=&quot;input1&quot;&gt;Enter a date:&lt;/label&gt;<br>&lt;input type=&quot;date&quot; id=&quot;input1&quot; name=&quot;input1&quot;&gt;<br></blockquote>",
        "<hr>",
        "Camper Cat is setting up a Mortal Kombat tournament and wants to ask his competitors to see what date works best. Add an <code>input</code> tag with a <code>type</code> attribute of \"date\", an <code>id</code> attribute of \"pickdate\", and a <code>name</code> attribute of \"date\"."
      ],
      "tests": [
        {
          "text": "Your code should add one <code>input</code> tag for the date selector field.",
          "testString": "assert($('input').length == 2, 'Your code should add one <code>input</code> tag for the date selector field.');"
        },
        {
          "text": "Your <code>input</code> tag should have a <code>type</code> attribute with a value of date.",
          "testString": "assert($('input').attr('type') == 'date', 'Your <code>input</code> tag should have a <code>type</code> attribute with a value of date.');"
        },
        {
          "text": "Your <code>input</code> tag should have an <code>id</code> attribute with a value of pickdate.",
          "testString": "assert($('input').attr('id') == 'pickdate', 'Your <code>input</code> tag should have an <code>id</code> attribute with a value of pickdate.');"
        },
        {
          "text": "Your <code>input</code> tag should have a <code>name</code> attribute with a value of date.",
          "testString": "assert($('input').attr('name') == 'date', 'Your <code>input</code> tag should have a <code>name</code> attribute with a value of date.');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<body>",
            "  <header>",
            "    <h1>Tournaments</h1>",
            "  </header>",
            "  <main>",
            "    <section>",
            "      <h2>Mortal Kombat Tournament Survey</h2>",
            "      <form>",
            "        <p>Tell us the best date for the competition</p>",
            "        <label for=\"pickdate\">Preferred Date:</label>",
            "        ",
            "        <!-- Add your code below this line -->",
            "        ",
            "        ",
            "        ",
            "        <!-- Add your code above this line -->",
            "        ",
            "        <input type=\"submit\" name=\"submit\" value=\"Submit\">",
            "      </form>",
            "    </section>",
            "  </main>",
            "  <footer>&copy; 2016 Camper Cat</footer>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d778c367417b2b2512aa9",
      "title": "Standardize Times with the HTML5 datetime Attribute",
      "description": [
        "Continuing with the date theme, HTML5 also introduced the <code>time</code> element along with a <code>datetime</code> attribute to standardize times. This is an inline element that can wrap a date or time on a page. A valid format of that date is held by the <code>datetime</code> attribute. This is the value accessed by assistive devices. It helps avoid confusion by stating a standardized version of a time, even if it's written in an informal or colloquial manner in the text.",
        "Here's an example:",
        "<code>&lt;p&gt;Master Camper Cat officiated the cage match between Goro and Scorpion &lt;time datetime=&quot;2013-02-13&quot;&gt;last Wednesday&lt;/time&gt;, which ended in a draw.&lt;/p&gt;</code>",
        "<hr>",
        "Camper Cat's Mortal Kombat survey results are in! Wrap a <code>time</code> tag around the text \"Thursday, September 15&lt;sup&gt;th&lt;/sup&gt;\" and add a <code>datetime</code> attribute to it set to \"2016-09-15\"."
      ],
      "tests": [
        {
          "text": "Your <code>time</code> tags should wrap around the text \"Thursday, September 15&lt;sup&gt;th&lt;/sup&gt;\".",
          "testString": "assert($('time').
