{
  "name": "Responsive Web Design Principles",
  "order": 4,
  "time": "1 hour",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "587d78b0367417b2b2512b08",
      "title": "Create a Media Query",
      "description": [
        "媒体查询是 CSS3 中可以根据不同可视窗口大小设置不同样式的新技术，可视窗口是用户在网页上的可见区域，根据访问网站的设备不同而不同",
        "媒体查询由媒体类型组成，如果媒体类型与文档显示的设备类型匹配，则应用对应的样式。你可以在你的媒体查询中用上你想用的选择器和样式。",
        "下面是一个媒体查询的例子：当设备宽度小于等于 100px 时返回的内容",
        "<code>@media (max-width: 100px) { /* CSS Rules */ }</code>",
        "以下媒体查询当设备高度大于等于 350px 时返回内容:",
        "<code>@media (min-height: 350px) { /* CSS Rules */ }</code>",
        "只有当媒体类型与当前设备匹配时，才应用媒体查询中的 CSS 。",
        "<hr>",
        "增加一个媒体查询，当设备的高度小于或等于 800px 时，<code>p</code> 标签的 <code>font-size</code> 为 10px"
      ],
      "tests": [
        {
          "text": "当设备 <code>height</code> 小于或等于 800px 时，你的 <code>p</code> 元素 <code>font-size</code> 应为 10px。",
          "testString": "assert($('p').css('font-size') == '10px', '当设备 <code>height</code> 小于或等于 800px 时，你的 <code>p</code> 元素 <code>font-size</code> 应为 10px。');"
        },
        {
          "text": "给 <code>height</code> 小于或等于 800px 的设备声明一个 <code>@media</code> 查询",
          "testString": "assert(code.match(/@media\\s?\\(max-height:\\s*?800px\\)/g), '给 <code>height</code> 小于或等于 800px 的设备声明一个 <code>@media</code> 查询');"
        }
      ],
      "releasedOn": "Feb 17, 2017",
      "solutions": [],
      "hints": [],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<style>",
            "  p {",
            "    font-size: 20px;",
            "  }",
            "  ",
            "  /* Add media query below */",
            "  ",
            "</style>",
            "  ",
            "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus quis tempus massa. Aenean erat nisl, gravida vel vestibulum cursus, interdum sit amet lectus. Sed sit amet quam nibh. Suspendisse quis tincidunt nulla. In hac habitasse platea dictumst. Ut sit amet pretium nisl. Vivamus vel mi sem. Aenean sit amet consectetur sem. Suspendisse pretium, purus et gravida consequat, nunc ligula ultricies diam, at aliquet velit libero a dui.</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d78b1367417b2b2512b09",
      "title": "Make an Image Responsive",
      "description": [
        "用 CSS 来做图片自适应其实很简单。取代于在元素上使用绝对宽度外:",
        "<code>img { width: 720px; }</code>",
        "你可以这样用：",
        "<blockquote>img {<br>&nbsp;&nbsp;max-width: 100%;<br>&nbsp;&nbsp;display: block;<br>&nbsp;&nbsp;height: auto;<br>}</blockquote>",
        "The <code>max-width</code> property of 100% scales the image to fit the width of its container, but the image won't stretch wider than its original width. Setting the <code>display</code> property to block changes the image from an inline element (its default), to a block element on its own line. The <code>height</code> property of auto keeps the original aspect ratio of the image.",
        "<hr>",
        "给 <code>img</code> 标签增加样式规则使它自适应容器尺寸。应该声明为块级元素，适应它容器的宽度并且保持原本的宽高比而不拉伸。"
      ],
      "tests": [
        {
          "text": "你的 <code>img</code> 标签应设置 <code>max-width</code> 为 100%。",
          "testString": "assert(code.match(/max-width:\\s*?100%;/g), '你的 <code>img</code> 标签应该包含 <code>max-width</code> 为 100% 的样式。');"
        },
        {
          "text": "你的 <code>img</code> 标签应设置 <code>display</code> 为 block。",
          "testString": "assert($('img').css('display') == 'block', '你的 <code>img</code> 标签应该设置 <code>display</code> 为 block。');"
        },
        {
          "text": "你的 <code>img</code> 标签应设置 <code>height</code> 为 auto。",
          "testString": "assert(code.match(/height:\\s*?auto;/g), '你的 <code>img</code> 标签应设置 <code>height</code> 为 auto。');"
        }
      ],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "solutions": [],
      "hints": [],
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<style>",
            "  ",
            "</style>",
            "",
            "<img src=\"https://s3.amazonaws.com/freecodecamp/FCCStickerPack.jpg\" alt=\"freeCodeCamp stickers set\">"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d78b1367417b2b2512b0a",
      "title": "Use a Retina Image for Higher Resolution Displays",
      "description": [
        "使图片出现 \"retina\" （优化在高分辨率设备下的展示）最简单的方式是定义它们的 <code>width</code> 和 <code>height</code> 值为源文件宽高的一半。",
        "这是一个图片宽高设置为源文件宽高一半的例子：",
        "<blockquote>&lt;style&gt;<br>&nbsp;&nbsp;img { height: 250px; width: 250px; }<br>&lt;/style&gt;<br>&lt;img src=&quot;coolPic500x500&quot; alt=&quot;A most excellent picture&quot;&gt;</blockquote>",
        "<hr>",
        "设置 <code>img</code> 标签的 <code>width</code> 和 <code>height</code> 为它们原始宽高的一半。在这个例子中，原始 <code>height</code> 和原始 <code>width</code> 的值都为 200px。"
      ],
      "tests": [
        {
          "text": "你的 <code>img</code> 标签应含有 100 像素的 <code>width</code>。",
          "testString": "assert($('img').css('width') == '100px', '你的 <code>img</code> 标签应含有 100 像素的 <code>width</code>。');"
        },
        {
          "text": "你的 <code>img</code> 标签应含有 100 像素的 <code>height</code>。",
          "testString": "assert($('img').css('height') == '100px', '你的 <code>img</code> 标签应含有 100 像素的 <code>height</code>。');"
        }
      ],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "solutions": [],
      "hints": [],
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<style>",
            "  ",
            "</style>",
            "",
            "<img src=\"https://s3.amazonaws.com/freecodecamp/FCCStickers-CamperBot200x200.jpg\" alt=\"freeCodeCamp sticker that says 'Because CamperBot Cares'\">"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d78b1367417b2b2512b0c",
      "title": "Make Typography Responsive",
      "description": [
        "除了用 <code>em</code> 或 <code>px</code> 去设置文本大小, 你还可以用视窗单位来控制排版。视窗单位，如百分比，是相对单位，但它们基于不同的元素。视口单元相对于设备的视口尺寸 (宽度或高度) ，百分比是相对于父级元素的大小。",
        "四个不同的视窗单位分别是：",
        "<ul><li><code>vw: 10vw</code> 视窗宽度的 10%。</li><li><code>vh: 3vh</code> 视窗高度的 3%。</li><li><code>vmin: 70vmin</code> 视窗中较小纬度的 70%  (高度 vs. 宽度).</li><li><code>vmax: 100vmax</code> 视窗中较大纬度的 100%  (高度 vs. 宽度)。</li></ul>",
        "<hr>",
        "设置 <code>h2</code> 标签的 <code>width</code> 为视窗宽度的 80%，并且段落 <code>width</code> 为小尺寸视窗的 75%。"
      ],
      "tests": [
        {
          "text": "你的 <code>h2</code> 标签的 <code>width</code> 应为 80vw。",
          "testString": "assert(code.match(/h2\\s*?{\\s*?width:\\s*?80vw;\\s*?}/g), '你的 <code>h2</code> 标签的 <code>width</code> 应为 80vw。');"
        },
        {
          "text": "你的 <code>p</code> 标签的 <code>width</code> 应为 75vmin。",
          "testString": "assert(code.match(/p\\s*?{\\s*?width:\\s*?75vmin;\\s*?}/g), '你的 <code>p</code> 标签的 <code>width</code> 应为 75vmin。');"
        }
      ],
      "releasedOn": "Feb 17, 2017",
      "solutions": [],
      "hints": [],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<style>",
            "  ",
            "</style>",
            "",
            "<h2>Importantus Ipsum</h2>",
            "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus quis tempus massa. Aenean erat nisl, gravida vel vestibulum cursus, interdum sit amet lectus. Sed sit amet quam nibh. Suspendisse quis tincidunt nulla. In hac habitasse platea dictumst. Ut sit amet pretium nisl. Vivamus vel mi sem. Aenean sit amet consectetur sem. Suspendisse pretium, purus et gravida consequat, nunc ligula ultricies diam, at aliquet velit libero a dui.</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    }
  ]
}